# nginx/nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream backend {
        # 'litellm-proxy' is the service name in docker-compose.yml
        # Port 4000 is the default LiteLLM proxy port
        server litellm-proxy:4000;
    }

    server {
        listen 443 ssl;
        server_name localhost; # Match the CN used in server cert

        # --- SSL/TLS Server Config ---
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # --- mTLS Client Verification ---
        ssl_client_certificate /etc/nginx/certs/ca.crt; # CA cert to verify client certs
        ssl_verify_client on;                          # Require client cert
        ssl_verify_depth 1;                            # Adjust if using intermediate CAs

        # Optional: Send client cert info to backend (if needed)
        # proxy_set_header X-SSL-Client-Cert $ssl_client_escaped_cert;
        # proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
        # proxy_set_header X-SSL-Client-Subject $ssl_client_s_dn;

        location / {
            proxy_pass http://backend; # Forward to the upstream backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for streaming if LiteLLM uses it
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400; # Long timeout for streaming
            proxy_buffering off;      # Disable buffering for SSE/WebSockets
        }
    }
}
